{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\batsh\\\\Desktop\\\\Data_Assigment\\\\sentiment-analyzer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\"); // Stores user input\n  const [sentiment, setSentiment] = useState(null); // Stores API response\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(null); // Error handling\n\n  // Function to send text to Express API\n  const analyzeSentiment = async () => {\n    if (!text.trim()) {\n      setError(\"Please enter some text!\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(\"http://localhost:4000/analyze-sentiment\", {\n        text\n      });\n      setSentiment(response.data.sentiment);\n    } catch (err) {\n      setError(\"Failed to analyze sentiment. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sentiment Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      placeholder: \"Enter text here...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyzeSentiment,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px 20px\"\n      },\n      children: \"Analyze Sentiment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Analyzing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), sentiment && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Sentiment: \", sentiment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ovsCTN1LYiyCD0WkOdwAB1x4zis=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","text","setText","sentiment","setSentiment","loading","setLoading","error","setError","analyzeSentiment","trim","response","post","data","err","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","placeholder","value","onChange","e","target","onClick","marginTop","color","_c","$RefreshReg$"],"sources":["C:/Users/batsh/Desktop/Data_Assigment/sentiment-analyzer/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nfunction App() {\n  const [text, setText] = useState(\"\"); // Stores user input\n  const [sentiment, setSentiment] = useState(null); // Stores API response\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(null); // Error handling\n\n  // Function to send text to Express API\n  const analyzeSentiment = async () => {\n    if (!text.trim()) {\n      setError(\"Please enter some text!\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post(\"http://localhost:4000/analyze-sentiment\", { text });\n      setSentiment(response.data.sentiment);\n    } catch (err) {\n      setError(\"Failed to analyze sentiment. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"50px\" }}>\n      <h1>Sentiment Analyzer</h1>\n      <textarea\n        rows=\"4\"\n        cols=\"50\"\n        placeholder=\"Enter text here...\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      ></textarea>\n      <br />\n      <button onClick={analyzeSentiment} style={{ marginTop: \"10px\", padding: \"10px 20px\" }}>\n        Analyze Sentiment\n      </button>\n\n      {loading && <p>Analyzing...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {sentiment && <h3>Sentiment: {sentiment}</h3>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}